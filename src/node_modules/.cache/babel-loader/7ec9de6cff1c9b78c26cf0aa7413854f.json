{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\pokec\\\\Downloads\\\\Bad-Day\\\\src\\\\components\\\\Home.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst express = require('express');\n\nconst cors = require('cors');\n\nconst mongoose = require('mongoose');\n\nrequire('dotenv').config();\n\nconst app = express();\nconst port = process.env.PORT || 5000; //Import PythonShell module.\n\nconst {\n  PythonShell\n} = require('python-shell');\n\napp.use(cors());\napp.use(express.json());\nconst uri = process.env.ATLAS_URI;\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true\n});\nconst connection = mongoose.connection;\nconnection.once('open', () => {\n  console.log(\"MongoDB database connection established successfully\");\n}); // placeholders\n\ndisaster = \"Cancer\";\nstate = \"California\";\napp.get(\"/\", (req, res, next) => {\n  //Here are the option object in which arguments can be passed for the python_test.js.\n  let options = {\n    mode: 'text',\n    pythonOptions: ['-u'],\n    // get print results in real-time\n    args: [disaster, state] //Argument (sys.argv[1])\n\n  };\n  PythonShell.run('FindDisease.py', options, function (err, result) {\n    if (err) throw err;\n    res.send(result.toString());\n  });\n});\napp.listen(port, () => {\n  console.log(\"Server is running on Port: \" + port);\n});\n\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Bad Days: Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"./index.css\",\n        type: \"text/css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"title\",\n            children: \"BAD DAY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"center-cropped\",\n            src: \"images\\\\2923.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/LoginSignup\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn1\",\n              children: \"LOGIN/SIGN-UP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"text\",\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Report\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn2\",\n              children: \"START NOW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Users/pokec/Downloads/Bad-Day/src/components/Home.js"],"names":["Link","express","require","cors","mongoose","config","app","port","process","env","PORT","PythonShell","use","json","uri","ATLAS_URI","connect","useNewUrlParser","useCreateIndex","connection","once","console","log","disaster","state","get","req","res","next","options","mode","pythonOptions","args","run","err","result","send","toString","listen","Home"],"mappings":"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","sourcesContent":["import {Link} from \"react-router-dom\";\r\n\r\nconst express = require('express');\r\nconst cors = require('cors');\r\nconst mongoose = require ('mongoose');\r\n\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 5000;\r\n//Import PythonShell module.\r\nconst {PythonShell} =require('python-shell');\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nconst uri = process.env.ATLAS_URI;\r\nmongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true});\r\nconst connection = mongoose.connection;\r\nconnection.once('open', () => {\r\n    console.log(\"MongoDB database connection established successfully\");\r\n})\r\n\r\n// placeholders\r\ndisaster = \"Cancer\"\r\nstate = \"California\"\r\n\r\napp.get(\"/\", (req, res, next)=>{\r\n    //Here are the option object in which arguments can be passed for the python_test.js.\r\n    let options = {\r\n        mode: 'text',\r\n        pythonOptions: ['-u'], // get print results in real-time\r\n        args: [disaster, state] //Argument (sys.argv[1])\r\n    };\r\n      \r\n  \r\n    PythonShell.run('FindDisease.py', options, function (err, result){\r\n          if (err) throw err;\r\n          res.send(result.toString())\r\n    });\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(\"Server is running on Port: \" + port);\r\n});\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n    <div>\r\n        <head>\r\n            <title>Bad Days: Home Page</title>\r\n            <link rel=\"stylesheet\" href=\"./index.css\" type=\"text/css\" />\r\n        </head>\r\n\r\n        <body>\r\n            <div class=\"container\">\r\n                <b>\r\n                    <div class=\"title\">BAD DAY</div>\r\n                    <img class=\"center-cropped\" src=\"images\\2923.jpg\" />\r\n                    <Link to=\"/LoginSignup\">\r\n                    <button class=\"btn1\">LOGIN/SIGN-UP</button>\r\n                    </Link>\r\n                    <h1 class=\"text\">Or</h1>\r\n                    <Link to=\"/Report\">\r\n                    <button class=\"btn2\">START NOW</button>\r\n                    </Link>\r\n                </b>\r\n            </div>\r\n        </body>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}